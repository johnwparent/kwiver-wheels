name: BuildVanilla

on:
  push:
    branches:
      - master
      - dev/*
  pull_request:
    branches:
      - master

jobs:
  build-fletch-image:
    name: Fletch Builder
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash
    strategy:
      matrix:
        base-image: ["ubuntu:18.04","ubuntu:16.04"]
        py-major: [2, 3]
        cuda: ["ON", "OFF"]
      fail-fast: false
    steps:
      - name: Checkout Current Repo
        uses: actions/checkout@v2
      - name: Setup python
        uses: actions/setup-python@v2
        with:
          python-version: '3.7'
          architecture: 'x64'
      - name: Install pv
        run: |
          sudo apt-get update
          sudo apt-get install -y pv
      - name: Checkout Fletch
        uses: actions/checkout@v2
        with:
          repository: kitware/fletch
          path: fletch
      - name: Build Fletch Image
        run: |
          chmod +x set_fletch_image.sh
          . set_fletch_image.sh
          docker build -t kitware/fletch:latest-$arch-py${{ matrix.py-major }}$from \
          -f $(pwd)/fletch_docker/cpp/Dockerfile.fletch \
          --build-arg BASE_IMAGE=$from_image \
          --build-arg PY_MAJOR_VERSION=${{ matrix.py-major }} \
          --build-arg ENABLE_CUDA=${{ matrix.cuda }} \
          .
        env:
          BASE_IMAGE: ${{ matrix.base-image }}
          CUDA: ${{ matrix.cuda }}
      - name: Archive Fletch Docker Image
        run: |
          . set_fletch_image.sh
          docker save kitware/fletch:latest-$arch-py${{ matrix.py-major }}$from | pv > fletch-$arch-py${{ matrix.py-major }}$from.tar
        env:
          BASE_IMAGE: ${{ matrix.base-image }}
          CUDA: ${{ matrix.cuda }}
      - name: Store Fletch Docker Image
        uses: actions/upload-artifact@v2
        with:
          path: ./fletch-$arch-py${{ matrix.py-major }}$from.tar

  build-kwiver-image:
    name: Kwiver Builder
    runs-on: ubuntu-latest
    needs:
      build-fletch-image
    strategy:
      matrix:
        tag: ["latest","1.6.0"]
    steps:
      - name: Build Kwiver Image
        run: |
          docker build -t kitware/kwiver:${{ matrix.tag }} -f kwiver_docker/cpp/Dockerfile.kwiver .
      - name: Archive Kwiver Docker Image
        run: |
          docker save kitware/kwiver:${{ matrix.tag }} | pv > kwiver.tar
      - name: Store Kwiver Docker Image
        uses: actions/upload-artifact@v2
        with:
          path: ./kwiver.tar
